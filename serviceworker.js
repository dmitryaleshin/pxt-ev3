var DisconnectResponse;function initWebappServiceWorker(){const t="@relprefix@".replace("---","").replace(/^\//,""),o=-1===t.indexOf("/"),n="makecode;"+t+";@pxtRelId@",e=["@targetUrl@/"+t,"@simUrl@","/pxt-ev3/semantic.js","/pxt-ev3/main.js","/pxt-ev3/pxtapp.js","/pxt-ev3/typescript.js","/pxt-ev3/marked/marked.min.js","/pxt-ev3/highlight.js/highlight.pack.js","/pxt-ev3/jquery.js","/pxt-ev3/pxtlib.js","/pxt-ev3/pxtcompiler.js","/pxt-ev3/pxtpy.js","/pxt-ev3/pxtblockly.js","/pxt-ev3/pxtwinrt.js","/pxt-ev3/pxteditor.js","/pxt-ev3/pxtsim.js","/pxt-ev3/pxtembed.js","/pxt-ev3/pxtworker.js","/pxt-ev3/pxtweb.js","/pxt-ev3/blockly.css","/pxt-ev3/semantic.css","/pxt-ev3/rtlsemantic.css","/pxt-ev3/blockly/media/sprites.png","/pxt-ev3/blockly/media/click.mp3","/pxt-ev3/blockly/media/disconnect.wav","/pxt-ev3/blockly/media/delete.mp3","/pxt-ev3/vs/loader.js","/pxt-ev3/vs/base/worker/workerMain.js","/pxt-ev3/vs/basic-languages/bat/bat.js","/pxt-ev3/vs/basic-languages/cpp/cpp.js","/pxt-ev3/vs/basic-languages/python/python.js","/pxt-ev3/vs/basic-languages/markdown/markdown.js","/pxt-ev3/vs/editor/editor.main.css","/pxt-ev3/vs/editor/editor.main.js","/pxt-ev3/vs/editor/editor.main.nls.js","/pxt-ev3/vs/language/json/jsonMode.js","/pxt-ev3/vs/language/json/jsonWorker.js","/pxt-ev3/smoothie/smoothie_compressed.js","/pxt-ev3/images/Bars_black.gif","/pxt-ev3/gifjs/gif.js","/pxt-ev3/ai.0.js","/pxt-ev3/target.js","/pxt-ev3/fieldeditors.js","/pxt-ev3/editor.js","","@targetUrl@/pxt-ev3/monacoworker.js","@targetUrl@/pxt-ev3/worker.js"],i=a(""),s=a("%2Fpxt-ev3%2Fdocs%5Cstatic%5Clego_education_logo.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5Clego_education_logo.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5Clego_education_logo.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5Cicons%5Candroid-chrome-192x192.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5Cicons%5Candroid-chrome-192x192.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5CMicrosoft-logo_rgb_c-gray-square.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5CMicrosoft-logo_rgb_c-gray.png;%2Fpxt-ev3%2Fdocs%5Cstatic%5Chero.png"),c=r(e.concat(s).map(e=>e.trim()).filter(e=>!!e&&0!==e.indexOf("@")));let l=!1;function r(e){var o=[];for(const t of e)-1===o.indexOf(t)&&o.push(t);return o}function a(e){const o=String.fromCharCode(64)+"cdnUrl"+String.fromCharCode(64);return r(e.split(";").map(e=>decodeURIComponent(e).replace(o,"@cdnUrl@").trim()))}self.addEventListener("install",e=>{o?(l=!0,console.log("Installing service worker..."),e.waitUntil(caches.open(n).then(e=>(console.log("Opened cache"),console.log("Caching:\n"+c.join("\n")),e.addAll(c).then(()=>e))).then(e=>e.addAll(i).catch(e=>{console.log("Failed to cache hexfiles")})).then(()=>self.skipWaiting()))):console.log("Skipping service worker install for unnamed endpoint")}),self.addEventListener("activate",e=>{o?(console.log("Activating service worker..."),e.waitUntil(caches.keys().then(e=>{e=e.filter(e=>{var o=3!==(o=e.split(";")).length?null:o[1];return null===o||o===t&&e!==n});return Promise.all(e.map(e=>caches.delete(e)))}).then(()=>{if(l){l=!1;{const e=self;return e.clients.claim().then(()=>e.clients.matchAll()).then(e=>{e.forEach(e=>e.postMessage({type:"serviceworker",state:"activated",ref:t}))})}}return Promise.resolve()}))):console.log("Skipping service worker activate for unnamed endpoint")}),self.addEventListener("fetch",o=>{o.respondWith(caches.match(o.request).then(e=>e||fetch(o.request)))})}function initWebUSB(){let n,i,s,c,l=0,r="idle";async function a(o){(await self.clients.matchAll()).forEach(e=>e.postMessage(o))}function d(){let o;var e=new Promise(e=>{console.log("Waiting for disconnect "+n),s=e,a({type:"serviceworker",action:"packet-io-lock-disconnect",lock:n})}),t=new Promise(e=>{o=setTimeout(()=>{console.log("Timed-out disconnect request "+n),e(DisconnectResponse.TimedOut)},5e3)});return Promise.race([e,t]).then(e=>(clearTimeout(o),s=void 0,e))}function b(o){return new Promise(e=>{setTimeout(e,o)})}self.addEventListener("message",async e=>{var o,t=e.data;if("serviceworkerclient"===(null==t?void 0:t.type))if("request-packet-io-lock"===t.action)if(n=n||await function(){if(n)return Promise.resolve(n);let o;var e=new Promise(e=>{console.log("check for existing lock"),c=e,a({type:"serviceworker",action:"packet-io-status"})}),t=new Promise(e=>{o=setTimeout(()=>{console.log("Timed-out check for existing lock"),e(void 0)},1e3)});return Promise.race([e,t]).then(e=>(clearTimeout(o),c=void 0,e))}(),"granting"===r)await a({type:"serviceworker",action:"packet-io-lock-granted",granted:!1,lock:t.lock});else{console.log("Received lock request "+t.lock);const s=Date.now()-l;if(i=t.lock,s<4e3&&(r="waiting",console.log("Waiting to grant lock request "+t.lock),await b(4e3-s)),i!==t.lock)console.log("Rejecting old lock request "+t.lock),await a({type:"serviceworker",action:"packet-io-lock-granted",granted:!1,lock:t.lock});else{if(r="granting",n)for(;console.log("Sending disconnect request "+t.lock),(o=await d())===DisconnectResponse.Waiting&&(console.log("Waiting on disconnect request "+t.lock),await b(1e3)),o===DisconnectResponse.Waiting;);console.log("Granted lock request "+t.lock),n=t.lock,await a({type:"serviceworker",action:"packet-io-lock-granted",granted:!0,lock:t.lock}),l=Date.now(),r="idle"}}else"release-packet-io-lock"===t.action?(console.log("Received disconnect for "+n),n=void 0,s&&s(DisconnectResponse.Disconnected)):"packet-io-lock-disconnect"===t.action?(console.log("Received disconnect response for "+n),t.didDisconnect&&(n=void 0),s&&s(t.didDisconnect?DisconnectResponse.Disconnected:DisconnectResponse.Waiting)):"packet-io-supported"===t.action?await a({type:"serviceworker",action:"packet-io-supported",supported:!0}):"packet-io-status"===t.action&&t.hasLock&&c&&c(t.lock)})}!function(e){e[e.Disconnected=0]="Disconnected",e[e.Waiting=1]="Waiting",e[e.TimedOut=2]="TimedOut"}(DisconnectResponse=DisconnectResponse||{}),initWebappServiceWorker(),initWebUSB();